# -*- coding: utf-8 -*-
"""GraphRAG_neo4j.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VOf1baHDeNZQPKMNujFg7hnj1qekcyqM
"""

!pip install --upgrade --quiet langchain langchain-community langchain-groq neo4j

# graph database configuration
NEO4J_URI=""
NEO4J_USERNAME=""
NEO4J_PASSWORD=""
#AURA_INSTANCEID=e993820b
#AURA_INSTANCENAME=Instance01

from langchain_community.graphs import Neo4jGraph

graph=Neo4jGraph(
    url = NEO4J_URI,
    username = NEO4J_USERNAME,
    password = NEO4J_PASSWORD,
)

graph

groq_api_key = "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"

from langchain_groq import ChatGroq

llm = ChatGroq(
    groq_api_key = groq_api_key,
    model_name= "Gemma2-9b-It"
)

llm

from langchain_core.documents import Document

text = """

Homi Jehangir Bhabha was born on 30 October 1909 into a wealthy Parsi family comprising Jehangir Hormusji Bhabha, a well-known lawyer, and Meherbai Framji Panday, granddaughter of Sir Dinshaw Maneckji Petit.[5][6][7] He was named Hormusji after his paternal grandfather, Hormusji Bhabha, who was Inspector-General of Education in Mysore.[8] He received his early studies at Mumbai's Cathedral and John Connon School.

Bhabha's upbringing instilled in him an appreciation for music, painting and gardening. He often visited his paternal aunt Meherbai Tata, who owned a Western classical music collection which included the works of Beethoven, Mozart, Haydn and Schubert. Together with his brother and his cousin, it was a ritual for him to listen to records from this collection over the gramophone. Bhabha also received special violin and piano lessons.

His tutor in sketching and painting was the artist Jehangir Lalkala. At seventeen, Bhabha's self-portrait won second place at the prestigious Bombay Art Society's exhibition.

Tending to a terrace garden of exotic plants and cross-bred bougainvillea and roses, Hormusji was an expert on trees, plants and flowers. He kept books on gardening in the house's large private library.

Bhabha showed signs of precocity in the sciences. As a child, he spent hours playing with Meccano sets, and was fond of building his own models rather than following the booklets that accompanied the sets. By fifteen, he had studied general relativity.

Bhabha frequently visited the home of his uncle Dorabji Tata, chairman of the conglomerate Tata Group and then one of the wealthiest men in India. There, he was privy to conversations Dorabji had with national leaders of the independence movement, like Mahatma Gandhi and Motilal Nehru, as well as business dealings in industries like steel, heavy chemicals and hydroelectric power which the Tata Group invested in.[9][10] John Cockcroft remarked that overhearing these conversations should have inspired Bhabha's career as a scientific organizer.
"""

documents = [Document(page_content=text)]

print(documents)

documents

!pip install --upgrade --quiet langchain_experimental

from langchain_experimental.graph_transformers import LLMGraphTransformer

llm_transformer = LLMGraphTransformer(llm=llm)

graph_docs = llm_transformer.convert_to_graph_documents(documents)

graph_docs

graph_docs[0].nodes

graph_docs[0].relationships

## lets load the dataset of movies


movie_query="""
LOAD CSV WITH HEADERS FROM
'https://raw.githubusercontent.com/tomasonjo/blog-datasets/main/movies/movies_small.csv' as row

MERGE(m:Movie{id:row.movieId})
SET m.released = date(row.released),
    m.title = row.title,
    m.imdbRating = toFloat(row.imdbRating)
FOREACH (director in split(row.director, '|') |
    MERGE (p:Person {name:trim(director)})
    MERGE (p)-[:DIRECTED]->(m))
FOREACH (actor in split(row.actors, '|') |
    MERGE (p:Person {name:trim(actor)})
    MERGE (p)-[:ACTED_IN]->(m))
FOREACH (genre in split(row.genres, '|') |
    MERGE (g:Genre {name:trim(genre)})
    MERGE (m)-[:IN_GENRE]->(g))
"""

graph.query(movie_query)

from langchain.chains import GraphCypherQAChain
chain=GraphCypherQAChain.from_llm(llm=llm,graph=graph,verbose=True)
chain

response=chain.invoke({"query":"Who was the actor of the moview GoldenEye"})

response

print(response)

graph.refresh_schema()
print(graph.schema)

from langchain.chains import GraphCypherQAChain
chain=GraphCypherQAChain.from_llm(llm=llm,graph=graph,verbose=True)
chain

response=chain.invoke({"query":"tell me the actors of adventure movie"})

response

chain

graph_docs

reponse = chain.invoke({"query":"who was the actor of the movie Casino"})

response

response=chain.invoke({"query":"which movie was released in year 2009"})

response

response=chain.invoke({"query":"How many unique genre are there"})

response

